RailsBreadcrumbs
===================

RailsBreadcrumbs is a gem that implements captcha for using in Rails application.
The gem provides functionality to create a captcha image and validate user's input.

* The gem allows multiple captchas at the same page
* The gem allows ...

Quick Start
=======

In your model:

  class MuscleUser < ActiveRecord::Base
    include RMagickCaptcha

    # Server create captcha_key, user input captcha_text
    attr_accessor :captcha_key, :captcha_text

    # Validate captcha
    def validate_captcha
      if (RAILS_ENV != 'test' && @captcha_text != @captcha_key)
        # TODO: use a localised text
        errors.add(:captcha_text,"is invalid")
        false
      end
    end
  end

In your controller:

  def new
    # Generate new captcha key
    session[:muscle_user_captcha] = MuscleUser.get_captcha_key
    @muscle_user = MuscleUser.new
  end

  def create
    cookies.delete :auth_token
    # protects against session fixation attacks, wreaks havoc with
    # request forgery protection.
    # uncomment at your own risk
    # reset_session
    @muscle_user = MuscleUser.new(params[:muscle_user])
    @muscle_user.captcha_key = session[:muscle_user_captcha]
    @muscle_user.registration_host = request.host_with_port
    @muscle_user.save
    if @muscle_user.errors.empty?
      session[:muscle_user_captcha] = nil
      # User valid only after account activation
      # self.current_muscle_user = @muscle_user
      redirect_back_or_default('/welcome')
      flash[:notice] = "Thanks for signing up!"
    else
      # Generate new captcha key
      session[:muscle_user_captcha] = MuscleUser.get_captcha_key
      render :action => 'new'
    end
  end

In your views:

  <% form_for @muscle_user, :url => muscle_users_path,
     :html => {:id => "muscle_user_form", :class => "basic-form" } do |f| %>
    <%= render :partial => "header" %>
    <%= f.error_messages %>
    <fieldset>
      <%= render :partial => "section2" %>
      <ul>
        <li>
          <%= image_tag "/captcha", :alt => "captcha", :title => "captcha" %>
          <%= f.text_field :captcha_text, :maxlength => 16%>
          <%= f.error_message_on :captcha_text %>
        </li>
      </ul>
      <%= f.submit button_label, :class => 'blue-button'  %>
    </fieldset>
  <% end %>

In your routes.rb:

  map.captcha '/captcha', :controller => 'muscle_users', :action => 'captcha'


Installation
=======

* Type 'gem install --local rmagick_captcha' with root account if you have installed RubyGems.


Example
=======

Example goes here.


TODO
=======

* Metaprogram def captcha
* Write generator to supply captcha_controller(?)
* Add tests
* Add backend with a predefined images (and sound?)
* Add visual effects (3d, grey and etc)


Copyright (c) 2011 arufanov, released under the MIT license.
